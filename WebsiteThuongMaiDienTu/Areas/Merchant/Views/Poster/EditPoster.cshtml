@model WebsiteThuongMaiDienTu.Areas.Merchant.Models.EditPoster

@using (Html.BeginForm("EditPoster", "Poster", FormMethod.Post, new { @class = "form-horizontal", @id = "editform" }))
{
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <h4 class="modal-title"><label id="title">Sửa tin đăng</label></h4>
        </div>
        <div class="modal-body">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PosterID)

                <div class="form-group">
                    @Html.Label("Tiêu đề tin", htmlAttributes: new { @class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Keyword, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Giá bán", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SellingPrice, new { htmlAttributes = new { @id = "priceID", @class = "form-control required", required = "required", @pattern="\\d*" @*@oninput = "this.value=this.value.replace(/[^0-9]/g,'');"*@ } })
                        @Html.ValidationMessageFor(model => model.SellingPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Tồn kho", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @id = "quantityID", @class = "form-control required", @type = "text", required = "required", @oninput = "this.value=this.value.replace(/[^0-9]/g,'');" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Hủy</button>
            <input id="EditPost" type="submit" class="btn btn-primary" value="Lưu" />
        </div>
    </div>
}
<style>
    input:invalid {
        border-color: red;
    }

    input,
    input:valid {
        border-color: #ccc;
    }
</style>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            var input = document.getElementById('priceID');
            input.oninvalid = function (event) {
                event.target.setCustomValidity('Selling price only contains number letter !');
            }
        })
    </script>
}